@page "/"
@using System.Text
@using Statistics.Shared

@inject HttpClient Http

<div class="index-headerTitle">
    <HeaderTitle Text="@HeaderTitleText"/>
</div>

<div class="index-headerSegment">
    <HeaderSegment BodyText="@HeaderSegmentText" HeaderText="Statistics"/>
</div>

<div class="index-counter">
    <div class="ui statistics">

        <div class="index-workoutCounter">
            <Counter WorkoutCount="@WorkoutCount" Text="Workouts"/>
        </div>

        <div class="index-absWorkoutCounter">
            <Counter WorkoutCount="@AbsWorkouts" Text="Abs"/>
        </div>

    </div>
</div>

<div class="index-loggedWorkouts-list">
    @if (Workouts != null)
    {
        <LoggedWorkoutsList Workouts=@Workouts/>
    }

</div>

<style>
    .index-headerTitle {
        padding-top: 2%;
        padding-left: 8%;
        padding-right: 15%;
    }
    .index-headerSegment {
        padding-top: 3%;
        padding-left: 8%;
        padding-right: 15%;
    }
    .index-loggedWorkouts-list {
        padding-top: 3%;
        width: 51%;
        padding-left: 38%;
    }
    .index-counter {
        padding-left: 38%;    
    }
    .index-workoutCounter {
        margin:2rem ;
    }
    .index-absWorkoutCounter {
        margin:2rem ;
    } 
</style>

@code {

    private static StringBuilder HeaderSegmentText => GenerateText();

    private static StringBuilder GenerateText()
    {
        var headerSegmentText = new StringBuilder();

        headerSegmentText.Append("The application allows user to log workout and particular exercise as well ");
        headerSegmentText.Append("as update already submitted exercise values. It also makes it possible to view all ");
        headerSegmentText.Append("submitted workouts inside a table on a corresponding pages.");

        return headerSegmentText;
    }

    private static string HeaderTitleText
        => "Statistics application with an ability to log workouts and update particular exercise";

    private int AbsWorkouts { get; set; }
    private int WorkoutCount { get; set; }
    private IEnumerable<Workout> Workouts { get; set; }


    protected override async Task OnInitializedAsync()
    {
        WorkoutCount = await Http.GetJsonAsync<int>("/api/workouts/count");
        AbsWorkouts = await Http.GetJsonAsync<int>("api/absworkouts/count");
        Workouts = await Http.GetJsonAsync<IEnumerable<Workout>>("/api/workouts");
    }

}